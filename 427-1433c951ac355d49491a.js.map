{"version":3,"sources":["webpack:///./node_modules/terra-application/lib/terra-dev-site/app/utilities.2/Logger.app.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"427-1433c951ac355d49491a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"logger\"\n    }}>{`Logger`}</h1>\n    <p><inlineCode parentName=\"p\">{`terra-application`}</inlineCode>{` provides an override-able logger to handle error, info, and warning messages.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`The logger works like the `}<inlineCode parentName=\"p\">{`console`}</inlineCode>{` for the `}<inlineCode parentName=\"p\">{`warn`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`info`}</inlineCode>{` methods. By default the logger will send the messages to the corresponding console methods. In production, info and warning messages will be suppressed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import logger from 'terra-application/lib/utils/logger';\n\nlogger.error('error');\nlogger.warn('warning');\nlogger.info('info');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overriding\"\n    }}>{`Overriding`}</h2>\n    <p>{`It may be desirable to override the default implementation of the logger. For example, logs could be sent to a server side log aggregator. The logger is a singleton and should only be overridden once per application. To override the logger implementation, use the `}<inlineCode parentName=\"p\">{`initializeLogger`}</inlineCode>{` function and provide a new function for the logger. All loggers must have a method signature of `}<inlineCode parentName=\"p\">{`(obj1 [, obj2, ..., objN])`}</inlineCode>{`, the same as the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Console/warn\"\n      }}>{`console.warn`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Console/error\"\n      }}>{`console.error`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Console/info\"\n      }}>{`console.info`}</a>{` methods.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { initializeLogger } from 'terra-application/lib/logger';\n\ninitializeLogger({\n  onInfo: (...args) => console.log('[Info] ', ...args),\n  onWarn: (...args) => console.warn('[Warn] ', ...args),\n  onError: (...args) => console.log('[Error] ', ...args),\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"logger-1\"\n    }}>{`Logger`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`syntax`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Behaviour`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`error`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Logger.error(obj1 [, obj2, ..., objN])`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Logs an error to the console.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`info`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Logger.info(obj1 [, obj2, ..., objN])`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Logs an info message to the console in a non production environment.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`warn`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Logger.warn(obj1 [, obj2, ..., objN])`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Logs an warning message to the console in a non production environment.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"initializelogger\"\n    }}>{`initializeLogger`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DefaultValue`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onInfo`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The method to override the default info logging method.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onWarn`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The method to override the default warning logging method.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onError`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The method to override the default error logging method.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}