{"version":3,"sources":["webpack:///./src/terra-dev-site/guide/Internationalization/AddingTranslationsForALocaleNotSupportedByTerraUI.d.guide.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iuBAQA,IAAMA,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,cALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,2DADR,2DAGA,0DAAuC,qBAAGC,WAAW,KAAQ,CACzD,KAAQ,oGAD2B,yBAAvC,4MAE+O,4BAAYA,WAAW,KAAvB,cAF/O,2IAEib,4BAAYA,WAAW,KAAvB,cAFjb,wKAEgpB,4BAAYA,WAAW,KAAvB,cAFhpB,mDAGA,+EAA4D,4BAAYA,WAAW,KAAvB,MAA5D,kBACA,yGAAsF,4BAAYA,WAAW,KAAvB,MAAtF,YACA,uFAAoE,4BAAYA,WAAW,KAAvB,yBAApE,iCACA,yBAAK,wBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iIAML,wHAAqG,4BAAYA,WAAW,KAAvB,yBAArG,iCACA,yBAAK,wBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oPAQL,mDAAgC,qBAAGA,WAAW,KAAQ,CAClD,KAAQ,gGADoB,yCAAhC,KAEwD,qBAAGA,WAAW,KAAQ,CAC1E,KAAQ,mFAD4C,iBAEjC,4BAAYA,WAAW,KAAvB,uBAFiC,oGAFxD,KAKA,uBAAG,wBAAQA,WAAW,KAAnB,QAAH,IAAgD,oBAAIA,WAAW,KAAf,iGAChD,yBAAK,wBAAMA,WAAW,OAAU,IAA3B,0RAEL,0EAAuD,4BAAYA,WAAW,KAAvB,yBAAvD,oGACA,yBAAK,wBAAMA,WAAW,OAAU,IAA3B,iSAIL,+OACA,kMAA+K,4BAAYA,WAAW,KAAvB,SAA/K,6EACA,sGAAmF,4BAAYA,WAAW,KAAvB,gCAAnF,yIACA,uCACA,yBAAK,wBAAMA,WAAW,OAAU,IAA3B,8MAWTJ,EAAWK,gBAAiB","file":"456-d0dfdfd66c7612efc0d3.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"adding-translations-for-a-locale-not-supported-by-terra\"\n    }}>{`Adding Translations For A Locale Not Supported By Terra`}</h1>\n    <p>{`Terra provides translations for `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/terra-aggregate-translations/blob/main/config/i18nSupportedLocales.js\"\n      }}>{`the following locales`}</a>{` for any string used in our components. In some cases, you may need to support locales outside of the ones we provide by default. This is possible, however one must ensure the locales are supported by `}<inlineCode parentName=\"p\">{`react-intl`}</inlineCode>{`, otherwise no locale-data will exist and loading the intl data will result in an error. Once confirmed that the locale is supported by `}<inlineCode parentName=\"p\">{`react-intl`}</inlineCode>{`, one is responsible for including the appropriate translations messages for each terra component used in your application, otherwise the translations will fail and `}<inlineCode parentName=\"p\">{`react-intl`}</inlineCode>{` will display the message name as the fallback.`}</p>\n    <p>{`As an example, let's say you need to support Polish (`}<inlineCode parentName=\"p\">{`pl`}</inlineCode>{`) in your app.`}</p>\n    <p>{`In the aggregate translation functions, set the locales option and include the `}<inlineCode parentName=\"p\">{`pl`}</inlineCode>{` locale.`}</p>\n    <p>{`If you only need to support English and Polish, you can call `}<inlineCode parentName=\"p\">{`aggregateTranslations`}</inlineCode>{` function with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const aggregateTranslations = require('terra-aggregate-translations');\n\naggregateTranslations({ locales: ['en', 'pl']});\n`}</code></pre>\n    <p>{`If you want to support all of the Terra supported locales in addition to Polish, you can call `}<inlineCode parentName=\"p\">{`aggregateTranslations`}</inlineCode>{` function with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const aggregateTranslations = require('terra-aggregate-translations');\nconst supportedLocales = require('terra-aggregate-translations/config/i18nSupportedLocales.js');\n\n\naggregateTranslations({ locales: [...supportedLocales, 'pl']});\n`}</code></pre>\n    <p>{`Similarly, if leveraging `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/terra-toolkit-boneyard/blob/main/config/webpack/webpack.config.js\"\n      }}>{`Terra's default webpack configuration`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/terra-aggregate-translations#terrai18nconfig-example\"\n      }}>{`you can add a `}<inlineCode parentName=\"a\">{`terraI18n.config.js`}</inlineCode>{` file to the root of your project with options to pass to aggregate-translations when its called`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{` `}<em parentName=\"p\">{`When aggregating a locale not supported by Terra, you will see two types of warning messages`}</em></p>\n    <pre><code parentName=\"pre\" {...{}}>{`WARNING: pl is NOT a Terra supported locale. Creating an aggregate translation file for pl, but be sure to include the appropriate translations messages for each terra component used in your application otherwise the translations will fail and the fallback will be displayed.\n`}</code></pre>\n    <p>{`The above message is a general warning from the `}<inlineCode parentName=\"p\">{`aggregateTranslations`}</inlineCode>{` function reminding you to include translations for the unsupported Terra locale you are adding.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`There was an error reading your translations file /Users/MyComputer/repos/terra-sandbox/node_modules/terra-alert/translations/pl.json.\n\nException Message: ENOENT: no such file or directory, open '/Users/MyComputer/repos/terra-sandbox/node_modules/terra-alert/translations/pl.json'\n`}</code></pre>\n    <p>{`The above message is a general warning that occurs for each Terra component your app uses noting that it does not provide translations for the locales you are adding beyond the default locales supported by Terra.`}</p>\n    <p>{`To resolve these warnings after running the aggregate-translations tool, you will need to add the terra name-spaced translation keys with the correct translations as a `}<inlineCode parentName=\"p\">{`.json`}</inlineCode>{` file for each non-supported locale in your app's translations directory.`}</p>\n    <p>{`We recommend copying all of terra name-space translations keys found in the `}<inlineCode parentName=\"p\">{`aggregate-translations/en.js`}</inlineCode>{` file as the basis for your new translations file. This will be a compiled list of the terra component translations used in your app.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`src/\n  ↳ MyComponent.jsx\ntranslations/\n  ↳ en.json\n  ↳ es.json\n  ↳ pl.json // Includes all keys from aggregate-translations/en.js in polish translations, in addition to your custom translations\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}